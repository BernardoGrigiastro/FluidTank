name: Java CI

on:
  push:
    branches:
      - "1.18-fabric"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 17 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      #- uses: actions/cache@v2
      #  with:
      #    path: ~/.gradle/caches
      #    key: ${{ runner.os }}-gradle-${{ hashFiles('**/forge_version.properties') }}
      - name: Dummy
        run: |
          echo "::group::IGNORE ME"
          chmod +x ./gradlew && ./gradlew tasks
          echo "::endgroup::"
      - name: Check Paramater
        run: chmod +x ./gradlew && ./gradlew gCO
      - name: Toolchain
        run: chmod +x ./gradlew && ./gradlew javaToolchains
      - name: Check Dependencies
        run: chmod +x ./gradlew && ./gradlew dependencies
      - name: Precompile
        run: chmod +x ./gradlew && ./gradlew compileScala
      - name: Data Generation
        run: chmod +x ./gradlew && ./gradlew runData
      - name: Prepare Test dir
        run: mkdir -p build/test-results/test
      - name: Test with Gradle
        if: ${{ contains(github.event.head_commit.message, '[skip release]') }}
        run: chmod +x ./gradlew && ./gradlew build
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_GAME_TEST: true
      - name: Build and Publish with Gradle
        if: ${{ !contains(github.event.head_commit.message, '[skip release]') }}
        run: chmod +x ./gradlew && ./gradlew build curseforge publishAllPublicationsToAzureRepositoryRepository --stacktrace
        env:
          CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_KEY }}
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZURE_USER_NAME: 'Kotori316'
          AZURE_TOKEN: ${{ secrets.AZURE_TOKEN }}
          RUN_GAME_TEST: true
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: build/test-results/test/*.xml
          name: Test-Report-${{ matrix.java }}-${{ github.run_number }}
      - name: Check artifacts
        run: ls -alF build/libs
